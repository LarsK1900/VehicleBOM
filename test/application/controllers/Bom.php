<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Bom extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Bom_model');
    } 

    /*
     * Listing of bom
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('bom/index?');
        $config['total_rows'] = $this->Bom_model->get_all_bom_count();
        $this->pagination->initialize($config);

        $data['bom'] = $this->Bom_model->get_all_bom($params);
        
        $data['_view'] = 'bom/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new bom
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('idIHS','IdIHS','required');
		$this->form_validation->set_rules('idSAP','IdSAP','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idIHS' => $this->input->post('idIHS'),
				'idSAP' => $this->input->post('idSAP'),
            );
            
            $bom_id = $this->Bom_model->add_bom($params);
            redirect('bom/index');
        }
        else
        {
			$this->load->model('Ihs_model');
			$data['all_ihs'] = $this->Ihs_model->get_all_ihs();

			$this->load->model('Sap_model');
			$data['all_sap'] = $this->Sap_model->get_all_sap();
            
            $data['_view'] = 'bom/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a bom
     */
    function edit($idBOM)
    {   
        // check if the bom exists before trying to edit it
        $data['bom'] = $this->Bom_model->get_bom($idBOM);
        
        if(isset($data['bom']['idBOM']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('idIHS','IdIHS','required');
			$this->form_validation->set_rules('idSAP','IdSAP','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idIHS' => $this->input->post('idIHS'),
					'idSAP' => $this->input->post('idSAP'),
                );

                $this->Bom_model->update_bom($idBOM,$params);            
                redirect('bom/index');
            }
            else
            {
				$this->load->model('Ihs_model');
				$data['all_ihs'] = $this->Ihs_model->get_all_ihs();

				$this->load->model('Sap_model');
				$data['all_sap'] = $this->Sap_model->get_all_sap();

                $data['_view'] = 'bom/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The bom you are trying to edit does not exist.');
    } 

    /*
     * Deleting bom
     */
    function remove($idBOM)
    {
        $bom = $this->Bom_model->get_bom($idBOM);

        // check if the bom exists before trying to delete it
        if(isset($bom['idBOM']))
        {
            $this->Bom_model->delete_bom($idBOM);
            redirect('bom/index');
        }
        else
            show_error('The bom you are trying to delete does not exist.');
    }
    
}
