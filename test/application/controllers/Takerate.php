<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Takerate extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Takerate_model');
    } 

    /*
     * Listing of takerate
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('takerate/index?');
        $config['total_rows'] = $this->Takerate_model->get_all_takerate_count();
        $this->pagination->initialize($config);

        $data['takerate'] = $this->Takerate_model->get_all_takerate($params);
        
        $data['_view'] = 'takerate/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new takerate
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('year','Year','integer');
		$this->form_validation->set_rules('takeRate','TakeRate','integer');
		$this->form_validation->set_rules('deliveryQuote','DeliveryQuote','integer');
		$this->form_validation->set_rules('numberPerCar','NumberPerCar','integer');
		$this->form_validation->set_rules('date','Date','max_length[45]');
		$this->form_validation->set_rules('idBOM','IdBOM','required');
		$this->form_validation->set_rules('userID','UserID','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idBOM' => $this->input->post('idBOM'),
				'userID' => $this->input->post('userID'),
				'year' => $this->input->post('year'),
				'takeRate' => $this->input->post('takeRate'),
				'deliveryQuote' => $this->input->post('deliveryQuote'),
				'numberPerCar' => $this->input->post('numberPerCar'),
				'date' => $this->input->post('date'),
            );
            
            $takerate_id = $this->Takerate_model->add_takerate($params);
            redirect('takerate/index');
        }
        else
        {
			$this->load->model('Bom_model');
			$data['all_bom'] = $this->Bom_model->get_all_bom();

			$this->load->model('Tbl_user_model');
			$data['all_tbl_users'] = $this->Tbl_user_model->get_all_tbl_users();
            
            $data['_view'] = 'takerate/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a takerate
     */
    function edit($idTakeRate)
    {   
        // check if the takerate exists before trying to edit it
        $data['takerate'] = $this->Takerate_model->get_takerate($idTakeRate);
        
        if(isset($data['takerate']['idTakeRate']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('year','Year','integer');
			$this->form_validation->set_rules('takeRate','TakeRate','integer');
			$this->form_validation->set_rules('deliveryQuote','DeliveryQuote','integer');
			$this->form_validation->set_rules('numberPerCar','NumberPerCar','integer');
			$this->form_validation->set_rules('date','Date','max_length[45]');
			$this->form_validation->set_rules('idBOM','IdBOM','required');
			$this->form_validation->set_rules('userID','UserID','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idBOM' => $this->input->post('idBOM'),
					'userID' => $this->input->post('userID'),
					'year' => $this->input->post('year'),
					'takeRate' => $this->input->post('takeRate'),
					'deliveryQuote' => $this->input->post('deliveryQuote'),
					'numberPerCar' => $this->input->post('numberPerCar'),
					'date' => $this->input->post('date'),
                );

                $this->Takerate_model->update_takerate($idTakeRate,$params);            
                redirect('takerate/index');
            }
            else
            {
				$this->load->model('Bom_model');
				$data['all_bom'] = $this->Bom_model->get_all_bom();

				$this->load->model('Tbl_user_model');
				$data['all_tbl_users'] = $this->Tbl_user_model->get_all_tbl_users();

                $data['_view'] = 'takerate/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The takerate you are trying to edit does not exist.');
    } 

    /*
     * Deleting takerate
     */
    function remove($idTakeRate)
    {
        $takerate = $this->Takerate_model->get_takerate($idTakeRate);

        // check if the takerate exists before trying to delete it
        if(isset($takerate['idTakeRate']))
        {
            $this->Takerate_model->delete_takerate($idTakeRate);
            redirect('takerate/index');
        }
        else
            show_error('The takerate you are trying to delete does not exist.');
    }
    
}
