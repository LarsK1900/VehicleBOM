<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Volumemonth extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Volumemonth_model');
    } 

    /*
     * Listing of volumemonth
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('volumemonth/index?');
        $config['total_rows'] = $this->Volumemonth_model->get_all_volumemonth_count();
        $this->pagination->initialize($config);

        $data['volumemonth'] = $this->Volumemonth_model->get_all_volumemonth($params);
        
        $data['_view'] = 'volumemonth/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new volumemonth
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('Month','Month','integer');
		$this->form_validation->set_rules('year','Year','integer');
		$this->form_validation->set_rules('idVolumeYears','IdVolumeYears','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idVolumeYears' => $this->input->post('idVolumeYears'),
				'Month' => $this->input->post('Month'),
				'year' => $this->input->post('year'),
            );
            
            $volumemonth_id = $this->Volumemonth_model->add_volumemonth($params);
            redirect('volumemonth/index');
        }
        else
        {
			$this->load->model('Volumeyear_model');
			$data['all_volumeyears'] = $this->Volumeyear_model->get_all_volumeyears();
            
            $data['_view'] = 'volumemonth/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a volumemonth
     */
    function edit($idVolumeMonth)
    {   
        // check if the volumemonth exists before trying to edit it
        $data['volumemonth'] = $this->Volumemonth_model->get_volumemonth($idVolumeMonth);
        
        if(isset($data['volumemonth']['idVolumeMonth']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('Month','Month','integer');
			$this->form_validation->set_rules('year','Year','integer');
			$this->form_validation->set_rules('idVolumeYears','IdVolumeYears','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idVolumeYears' => $this->input->post('idVolumeYears'),
					'Month' => $this->input->post('Month'),
					'year' => $this->input->post('year'),
                );

                $this->Volumemonth_model->update_volumemonth($idVolumeMonth,$params);            
                redirect('volumemonth/index');
            }
            else
            {
				$this->load->model('Volumeyear_model');
				$data['all_volumeyears'] = $this->Volumeyear_model->get_all_volumeyears();

                $data['_view'] = 'volumemonth/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The volumemonth you are trying to edit does not exist.');
    } 

    /*
     * Deleting volumemonth
     */
    function remove($idVolumeMonth)
    {
        $volumemonth = $this->Volumemonth_model->get_volumemonth($idVolumeMonth);

        // check if the volumemonth exists before trying to delete it
        if(isset($volumemonth['idVolumeMonth']))
        {
            $this->Volumemonth_model->delete_volumemonth($idVolumeMonth);
            redirect('volumemonth/index');
        }
        else
            show_error('The volumemonth you are trying to delete does not exist.');
    }
    
}
